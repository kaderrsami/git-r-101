---
title: "tidyr"
author: "Sami Kader"
format: html
execute: 
  keep-md: true
---

## Tidyr and ggplot

```{r}
#| message: false
here::i_am("git-r-101.Rproj")
library(here)
library(ggplot2)
library(dplyr)
library(tidyr)
library(plotly)
```

do not include the rendered doc in the Git for ensuring the compatibility forcing. The rendered version can be for online CV.

### Multiple lines on a single graph

```{r zero}
eustock <- as.data.frame(EuStockMarkets)
n <- nrow(eustock)  # get the number of rows
eustock <- eustock %>% mutate(time = 1:n)  # adding a time variable

ggplot(eustock, aes(y = DAX, x = time)) +
  geom_line()
```
Ploting the evolution of the dacs / the years

#### Wrong solution

```{r first}
ggplot(eustock, aes(y = DAX, x = time)) +
  geom_line()+
  geom_line(mapping = aes(y=CAC), color='red')
```

The problems:
- the y axis name is wrong
- colors must be specified manually
- we miss an associations between colors and names (legend missing)

#### Tydir solution

```{r eustocks_on_the_same_file}
# Convert to long format
eustock_long <- eustock |> pivot_longer(
                                        cols = -time, 
                                        names_to = "StockIndex", 
                                        values_to = "Value")

# Create the plot
ggplot(eustock_long, aes(
                        x = time, 
                        y = Value, 
                        color = StockIndex,
                        group = StockIndex)) +
  geom_line() +
    labs(
        y = "Stock Value", 
        x = "Time", 
        color = "Stock Index")
```
```{r}
print(eustock_long)
```

When in the long format, whe can use other features of ggplot: 
```{r eustocks_long}
#| fig-height: 10
ggplot(eustock_long, aes(
                        x = time, 
                        y = Value, 
                        color = StockIndex)) +
  geom_line() +
  facet_wrap(~StockIndex, ncol = 1, scales = 'free_y')
```

```{r eustocks_interactive}
# Convert to long format if not already done
eustock_long <- eustock %>% pivot_longer(
  cols = -time, 
  names_to = "StockIndex", 
  values_to = "Value"
)

# Create the ggplot object
p <- ggplot(eustock_long, aes(
                        x = time, 
                        y = Value, 
                        color = StockIndex,
                        group = StockIndex)) +
  geom_line() +
    labs(
        y = "Stock Value", 
        x = "Time", 
        color = "Stock Index")

# Convert to plotly object for interactivity
p <- ggplotly(p)

# Show the plot
p

```

